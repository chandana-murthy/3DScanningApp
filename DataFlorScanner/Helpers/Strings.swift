//
//  Strings.swift
//  DataFlor
//
//  Created by Chandana Murthy on 28.03.22.
//

import Foundation

struct Strings {
    static let moveDevice = "Move the device around to detect horizontal and vertical surfaces."
    static let trackingUnavailable = "Tracking unavailable."
    static let resuming = "Attempting to resume..."
    static let moveSlowly = "Too quick - Move the device more slowly."
    static let trackingLimited = "Tracking limited - Point the device at an area with visible surface detail, or improve lighting conditions."
    static let initializingSession = "Initializing AR session..."
    static let measureFirst = "Tap a location to begin measuring"
    static let measureSecond = "Tap another location to complete measurement"
    static let scanSaveFail = "Unable to save the scan. Please try again"
    static let sessionInterrupted = "Session was interrupted"
    static let sessionResumed = "Session interruption ended"
    static let restartSession = "Restart session"
    static let arSessionFailed = "The AR session failed."
    static let startMeasuring = "Start Measuring"
    static let stopMeasuring = "Stop Measuring"
    static let saveInProgress = "Save in progress, please wait."
    static let noScan = "No scan to save."
    static let saveFailed = "Failed To save file."
    static let startARSession = "Starting AR session..."
    static let pleaseWait = "Please wait"
    static let newScan = "New scan"
    static let addScan = "Add scan"
    static let enterName = "Please enter a name"
    static let name = "Name"
    static let enterDescription = "Please enter a description"
    static let description = "Description"
    static let failedToLoadAsset = "Failed to load the asset. Please close and try again"
    static let deleteConfirmation = "Are you sure you want to delete this scan?"
    static let deleteAllMarkersConfirmation = "Are you sure you want to delete all markers?"
    static let supportedExports = "Supported export formats"
    static let createdOn = "Created on"
    static let capture = "Capture"
    static let bgVisibility = "Background visibility"
    static let latitude = "lat"
    static let longitude = "long"
    static let normalEstimation = "Normal estimation"
    static let surfaceReconstruction = "Surface reconstruction"
    static let processing = "Processing..."
    static let exportType = "Export type"
    static let changeLangToEnglish = "Do you want to change the language to English?"
    static let changeLangToDeutsch = "Do you want to change the language to German?"
    static let lidarIncapable = "This application requires a LiDAR capable device.\nIt seems that unfortunately this device does not support this functionality."
    static let appLangChangeConfirmation = "App language change"
    static let scanNotSavedAlert = "The scan is not saved. Are you sure you want to close it?"
    static let changesNotSavedAlert = "New changes are not saved. Are you sure you want to close?"
    static let deleteMeasurements = "Delete measurements"
    static let optional = "Optional"
    static let unableToStartScan = "Unable to start scan. Please try again or restart the application"
    static let fileCorrupted = "We're sorry, the file is corrupted. It can no longer be downloaded in this format"
    static let noPlaneFound = "Failed to find a plane. Try tapping a different location."
    static let location = "Location"
    static let viewer = "Viewer"
    static let saveChangesAsk = "Save changes?"
    static let sureYouWantToSaveChanges = "Are you sure you want to save changes to the scan?"
    static let scanSaved = "Scan saved successfully."
    static let confidenceText = "When sampling the world, each point is attributed a weighted value depending of luminosity and distance"
    static let confidence = "Confidence"
    static let flashlight = "Flashlight"
    static let enableCamera = "Enable Camera Permission ðŸ“¸"
    static let enableCameraMsg = "The application needs access to the camera to scan your environment. Please change this permission in the settings."
    static let computeNormals = "In order to be able to apply this processing, the vertices normals need to be known. Consider doing a \"normal estimation\" pass in order to compute them."
    static let pythonError = "The underlying Python module used for processing encountered some issues with memory management"
    static let somethingWentWrong = "Something went wrong"
    static let language = "Language"
    static let theme = "Theme"
    static let measurements = "Measurements"
    static let measures = "Measures"
    static let tools = "Tools"
    static let adjustments = "Adjustments"
    static let orthographic = "Orthographic"
    static let perspective = "Perspective"
    static let scans = "Scans"

    // MARK: - Point Cloud
    static let pointCloud = "Point cloud"
    static let newPointCloud = "New point cloud"
    static let pointCloudScans = "Point cloud scans"
    static let noScansAvailable = "No scans available"
    static let pointSize = "Point size"
    static let measurementPosition = "Measurement visibility"
    static let pointVisibility = "Point visibility"
    static let showPoints = "Show points"
    static let hidePoints = "Hide points"

    // MARK: - Mesh
    static let meshScans = "Mesh scans"
    static let newMeshScan = "New mesh scan"
    static let mesh = "Mesh"
    static let noMeshScan = "No mesh scans available"
    static let showMesh = "Show mesh"

    // MARK: - Common Actions & Messages
    static let undo = "Undo"
    static let save = "Save"
    static let download = "Download"
    static let export = "Export"
    static let delete = "Delete"
    static let error = "Error"
    static let oops = "Oops"
    static let okay = "OK"
    static let alert = "Alert!"
    static let restart = "Restart"
    static let yes = "Yes"
    static let no = "No"
    static let unknown = "Unknown"
    static let cancel = "Cancel"
    static let gotIt = "Got it!"
    static let settings = "Settings"
    static let low = "Low"
    static let medium = "Medium"
    static let high = "High"
    static let view = "View"
    static let back = "Back"
}
